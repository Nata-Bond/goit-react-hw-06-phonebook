{"version":3,"sources":["components/filter/filter.module.css","redux/contacts/contactsTypes.js","components/contactForm/ContactForm.js","redux/contacts/contactsActions.js","components/contactList/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/contactForm/contactForm.module.css"],"names":["module","exports","ContactForm","state","name","number","handleInputChange","e","setState","target","value","checkFullIsForm","length","alert","checkUnique","contacts","props","isExist","find","contact","handleSubmit","preventDefault","onAdd","unique","fullForm","reset","className","s","form","onSubmit","this","input","type","onChange","button","Component","connect","items","dispatch","types","payload","id","shortid","generate","addContact","mapDispatchToProps","deleteContact","listItem","onClick","filter","filteredContacts","console","log","normalizedFilter","toLowerCase","includes","getFilteredContacts","list","map","changeFilter","filterValue","App","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ef04acf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__2EEHk\"};","const ADD = \"contacts/Add\";\nconst DELETE = \"contacts/delete\";\nconst CHANGE_FILTER = \"contacts/changeFilter\";\n\nexport default { ADD, DELETE, CHANGE_FILTER };\n","import React, { Component } from \"react\";\nimport s from \"./contactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport { addContact } from \"../../redux/contacts/contactsActions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  // handleImputName = (e) => {\n  //   console.log(e.target.value);\n  //   this.setState({ name: e.target.value });\n  // };\n\n  // handleImputNumber = (e) => {\n  //   console.log(e.target.value);\n  //   this.setState({ number: e.target.value });\n  // };\n\n  handleInputChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  checkFullIsForm = (name, number) => {\n    if ((name.length > 0) & (number.length > 0)) {\n      return true;\n    } else {\n      alert(`form is not full`);\n      return false;\n    }\n  };\n\n  checkUnique = (name, number) => {\n    const { contacts } = this.props;\n\n    if (contacts.length > 0) {\n      const isExist = !!contacts.find(\n        (contact) => contact.name === name || contact.number === number\n      );\n      isExist && alert(`${name || number} is already exist`);\n      return !isExist;\n    }\n    return true;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onAdd } = this.props;\n    const unique = this.checkUnique(name, number);\n\n    const fullForm = this.checkFullIsForm(name, number);\n\n    unique && fullForm && onAdd(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: \"\",\n      number: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={s.form} onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <label>\n            Number\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleInputChange}\n            />\n          </label>\n          <button className={s.button} type=\"submit\">\n            Add\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { contacts: state.contacts.items };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAdd: (name, number) => dispatch(addContact(name, number)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import types from \"./contactsTypes\";\nimport shortid from \"shortid\";\n\nconst addContact = ({ name, number }) => ({\n  type: types.ADD,\n  payload: {\n    id: shortid.generate(),\n    name,\n    number,\n  },\n});\n\nconst deleteContact = (id) => ({\n  type: types.DELETE,\n  payload: id,\n});\n\nconst changeFilter = (filterValue) => ({\n  type: types.CHANGE_FILTER,\n  payload: filterValue,\n});\n\nexport { addContact, deleteContact, changeFilter };\n","import React from \"react\";\nimport s from \"./contacts.module.css\";\nimport { connect } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/contactsActions\";\n\nconst ContactListItem = ({ name, number, id, deleteContact }) => {\n  return (\n    <li className={s.listItem}>\n      <span>\n        {name} : {number}\n      </span>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nconst mapDispatchToProps = { deleteContact };\n\nexport default connect(null, mapDispatchToProps)(ContactListItem);\n","import React from \"react\";\nimport ContactListItem from \"./ContactListItem\";\nimport s from \"./contacts.module.css\";\nimport { connect } from \"react-redux\";\n\nconst ContactList = ({ contacts, filter }) => {\n  //this is it//\n\n  const getFilteredContacts = () => {\n    console.log(contacts, filter);\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(\n      (contact) =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(normalizedFilter)\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  // return \"muha\";\n  return (\n    <ul className={s.list}>\n      {filteredContacts &&\n        filteredContacts.map((contact) => (\n          <ContactListItem key={contact.id} {...contact} />\n        ))}\n    </ul>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: state.contacts.items,\n  filter: state.contacts.filter,\n});\n\nexport default connect(mapStateToProps, null)(ContactList);\n","import React from \"react\";\nimport s from \"./filter.module.css\";\nimport { connect } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ changeFilter, filter }) => {\n  const handleChangeFilter = (e) => {\n    changeFilter(e.target.value);\n  };\n\n  return (\n    <>\n      <label>\n        <input\n          className={s.input}\n          type=\"text\"\n          value={filter}\n          onChange={handleChangeFilter}\n        />\n      </label>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { filter: state.filter };\n};\n\nconst mapDispatchToProps = { changeFilter };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from \"react\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\n\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\n\nconst App = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n\n      <ContactList />\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport types from \"./contactsTypes\";\n\nconst items = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      return state.filter((contact) => contact.id !== payload);\n\n    default:\n      return state;\n  }\n};\n\nconst filter = (state = \"\", { type, payload }) => {\n  switch (type) {\n    case types.CHANGE_FILTER:\n      return payload;\n  }\n  return state;\n};\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__YedcG\",\"input\":\"contactForm_input__2KXel\",\"button\":\"contactForm_button__l3K4C\"};"],"sourceRoot":""}